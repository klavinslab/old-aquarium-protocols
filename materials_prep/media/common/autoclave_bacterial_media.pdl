<?xml version="1.0" encoding="UTF-8"?>
<protocol>
  <!-- Information -->
  <information>Take in media, glassware, etc. and make it sterile.</information>
  <!-- IMPORTANT: Expects input objects to end with "(unsterile)" and output to end with "(sterile")
                  These must exist as object types for this protocol to function.
       -->

  <!-- Arguments -->
  <argument>
    <name>item_number</name>
    <type>number</type>
    <description>Enter the number of items you are autoclaving. Remember, this is for bacterial media only - do not include YPAD/SC/SDO.</description>
  </argument>

  <!-- Initial takes -->
  <!-- FIXME: using 'getdata' instead of 'argument' violates abstraction layer. There is no way to hack another solution? -->
  <!-- Initialize empty vector for pre-autoclaved items -->
  <assign>
    <lhs>items</lhs>
    <rhs>[]</rhs>
  </assign>
  <assign>
    <lhs>counter</lhs>
    <rhs>0</rhs>
  </assign>
  <while>
    <condition>%{counter} &lt; %{item_number}</condition>
    <do>
      <!-- Ask for next item's string -->
      <step>
        <description>Enter items to autoclave.</description>
        <getdata>
          <type>string</type>
          <description>Enter the next item to autoclave (must be exactly the name that's in the inventory).</description>
          <var>current_item_name</var>
        </getdata>
      </step>
      <!-- Take that item -->
      <!-- We could ask for all the items at the end of the loop, but that's difficult to debug - if one
           object type was wrong, how do we know which one it was? Traceback is useless (nonexistent?) -->
      <take>
        <item>
            <type>%{current_item_name}</type>
            <quantity>1</quantity>
            <var>current_item</var>
        </item>
      </take>
      <assign>
        <lhs>items</lhs>
        <rhs>%{items}.push(%{current_item})</rhs>
      </assign>
      <assign>
        <lhs>counter</lhs>
        <rhs>%{counter} + 1</rhs>
      </assign>
    </do>
  </while>
  <!-- TODO: offer small selection of options:
              liquid cycle
              optional cycle at 110 for 15 mins
              'dry cycle' (unwrapped) -->

  <!-- Begin steps -->
  <step>
    <description>Apply autoclave tape.</description>
    <note>Add autoclave tape to each item. For items with lids, make sure autoclave tape extends fully over the lid and onto the sides of the item, so that one must break the seal in order to use it.</note>
  </step>
  <!-- TODO: take the autoclave here. Note that it will not be properly released as it would be controlled, somehow, at the metacol level -->
  <step>
    <description>Place items in the autoclave.</description>
    <note>Make sure no caps are tight. If a cap is tight, the item may explode.</note>
  </step>
  <!-- TODO: make sure these instructions are detailed enough -->
  <step>
    <description>Set autoclave settings.</description>
    <note>Select cancel (red button) to remove any previous dialog. Select the liquid cycle. This should set the temperature to 121°C and the the length of time to 15 minutes.</note>
  </step>
  <step>
    <description>Start the autoclave.</description>
    <note>Hit the green button on the autoclave.</note>
  </step>
  <step>
    <description>Wait around until the autoclave finishes.</description>
    <note>The amount of time it takes varies considerably (45 mins to 1.5 hours).</note>
  </step>
  <step>
    <description>Remove items from the autoclave to a cooling area.</description>
    <note>When items are below 50°C, proceed to the next step.</note>
  </step>
  <!-- TODO: another wait step that shouldn't be in a protocol -->
  <!-- Produces -->
  <assign><lhs>counter</lhs><rhs>0</rhs></assign>
  <while>
    <condition>%{counter} &lt; %{item_number}</condition>
    <do>
      <!-- Ask for next item's string -->
      <!-- If you pop off of the list, can't release anything -->
      <assign>
        <lhs>produced_item_name</lhs>
        <rhs>%{items}[%{counter}][0][:object][:name]</rhs>
      </assign>
      <assign>
        <lhs>produced_item_name</lhs>
        <rhs>%{produced_item_name}[0..-12] + '(sterile)'</rhs>
      </assign>
      <produce>
        <object>%{produced_item_name}</object>
        <quantity>1</quantity>
        <release>%{items}[%{counter}]</release>
      </produce>
      <assign>
        <lhs>counter</lhs>
        <rhs>%{counter} + 1</rhs>
      </assign>
    </do>
  </while>
</protocol>
