argument
  e_coli_strain: sample array, "the log phase E. coli strains you wish to preform the knockouts in. NOTE: the nth E. coli strain will be knocked out by the nth cassette" 
  knockout_fragments: sample array, "the cassettes you wish to transform into the strains, respectively"
  #note: "The nth E. coli strain will be knocked out with the nth cassette"
  #strain_name: string, "the name of the strain you are producing today (copy it from Week4 lab description in Google Drive"
  plate_type: object, "The appropriate selection plates (thyamine+trimethoprim or minimal-media)"
  #pfwd: sample array, "The forward primer"
  #prev1s: sample array, "Reverse primers for knockout test group"
  #prev2s: sample array, "Reverse primers for control group"
  #phusion_enzyme: sample, "The Phusion HF Master Mix stock"
  #ladder_one: sample, "the reference ladder for Gel electrophoresis"
end

base = "recombineering/single_plate_type" 

##
## Qs: How do you repeat OD test if not enough wait time
##

#filter for unique sample ids
# (currently done in the first protocol)
#unique_e_coli_strains = unique(e_coli_strain)

place make_log_phase
  protocol: base+"/make_log_phase.pl"
  argument
    e_coli_strains: e_coli_strain 
  end
  marked: true
  group: aquarium_user
  start: now()
end


place finish_log_phase
	protocol: base+"/finish_log_phase.pl"	
	# log_cells: wire log phase cells from make_log_phase
	start: hours(2)
	window: minutes(20) 
	group: aquarium_user
	marked: false
end

wire (make_log_phase, "log_cells") => (finish_log_phase, "log_cells") 

### ??  
#log_cells = "BF001"
#plate_type_1 = "LB Kan Plate (sterile)"
###

num_trans = 1

place heat_shock
  protocol: base+"/heat_shock_parallel.pl"
  # cells_flask_array: wire log cells from here
  argument
  	cells_flask_array: e_coli_strain
  end
  group: aquarium_user
  window: hours(1)
  start: now()
  #marked: true
end

wire (make_log_phase, "log_cells") => (heat_shock, "cells_flask_array")

place quick_comp
  protocol: base+"/quick_comp_parallel.pl"
  group: aquarium_user
  start: now()
  window: minutes(1)
end

wire (heat_shock,"shocked_cells") => (quick_comp,"shocked_cells")

place transform
  protocol: base+"/transform.pl"
  argument
    plasmid_id: knockout_fragments
    dna_vol: 2
    e_coli_map: e_coli_strain
  end
  group: aquarium_user
  start: now()
  window: minutes(1)
end

wire (quick_comp,"electrocompetent_cells") => (transform,"e_coli_strain_type")
wire (quick_comp,"iceblock") => (transform, "iceblock") # carry the iceblock over protocols
wire (quick_comp,"alrack") => (transform, "alrack") # carry the alrack over protocols

place incubate_tube
  protocol: base+"/incubate_tube.pl"
  argument
    temp: 30
  end
  group: aquarium_user
  start: now()
  window: minutes(2)
end

wire (transform,"transformed_cells_ids") => (incubate_tube,"e_coli_strain_id")

place plate
  protocol: base+"/plate.pl"
  group: aquarium_user
  argument
    volume: 200
    plate_type: plate_type
  end
  start: hours(1) #minutes(30)
  window: hours(1)
end

wire (transform,"transformed_cells_ids") => (plate,"e_coli_strain_id")


# forward transitions

transition [make_log_phase] => [finish_log_phase] when !error(0) && completed(0) end 
transition [finish_log_phase] => [heat_shock] when !error(0) && completed(0) end

transition [heat_shock] => [quick_comp] when !error(0) && completed(0) end 
transition [quick_comp] => [transform] when !error(0) && completed(0) end 
transition [incubate_tube] => [plate] when !error(0) && completed(0) end 
transition [plate] => [] when !error(0) && completed(0) end


# T1 -> []
transition [transform] => [incubate_tube] when !error(0) && completed(0) end #&& (return_value(0,"time_constant") >= 3) end

# T1 -> T1
#transition [ transform ] => [ transform ] when !error(0) && completed(0) && (return_value(0,"time_constant") < 3) && (num_trans == 1)
#    do
#        num_trans = num_trans + 1
#    end
#end


# remaining reverse transitions
transition [make_log_phase] => [make_log_phase] when error(0) end 
transition [finish_log_phase] => [make_log_phase] when error(0) end 

transition [heat_shock] => [heat_shock] when error(0) end 
transition [quick_comp] => [quick_comp] when error(0) end 
transition [transform] => [transform] when error(0) end 
transition [incubate_tube] => [incubate_tube] when error(0) end
transition [plate] => [plate] when error(0) end
#transition [boil_cells] => [boil_cells] when error(0) end
#transition [pcr_prepare] => [pcr_prepare] when error(0) end
#transition [pour_gels] => [pour_gels] when error(0) end
#transition [run_gels] => [run_gels] when error(0) end
#transition [image_gels] => [image_gels] when error(0) end

