# Arguments
#argument
  #source_oligos1: sample array, "Choose the oligonucleotides you want to combine"
  #source_oligos2: sample array, "Choose the oligonucleotides you want to combine"
  #source_oligos3: sample array, "Choose the oligonucleotides you want to combine"
  #source_oligos4: sample array, "Choose the oligonucleotides you want to combine"  
  
#end

#Testing inputs - to save time (remove at end)
source_oligos1 = [1079, 1080]
source_oligos2 = [1079, 1080]
source_oligos3 = [1079, 1080]
source_oligos4 = [1079, 1080] 
backbone_fragments = [1141, 1144]

# Places
place stock1
  protocol: "labw14/group6/make_master_stock.pl"
  argument
    oligonucleotides: source_oligos1
  end
  group: aquarium_user
  marked: true
  start: now()
  window: minutes(30)
end

place stock2
  protocol: "labw14/group6/make_master_stock.pl"
  argument
    oligonucleotides: source_oligos2
  end
  group: aquarium_user
  marked: true
  start: now()
  window: minutes(30)
end

place stock3
  protocol: "labw14/group6/make_master_stock.pl"
  argument
    oligonucleotides: source_oligos3
  end
  group: aquarium_user
  marked: true
  start: now()
  window: minutes(30)
end

place stock4
  protocol: "labw14/group6/make_master_stock.pl"
  argument
    oligonucleotides: source_oligos4
  end
  group: aquarium_user
  marked: true
  start: now()
  window: minutes(30)
end

place assembly1
  protocol: "labw14/group6/gene_assembly_PCA.pl"
  argument
    oligo_pools: [oligo_pool11, oligo_pool12]
  end
  group: aquarium_user
  start: now()
  window: minutes(30)
end

place assembly2
  protocol: "labw14/group6/gene_assembly_PCA.pl"
  argument
    oligo_pools: [oligo_pool21, oligo_pool22]
  end
  group: aquarium_user
  start: now()
  window: minutes(30)
end

place run_gel_image
  protocol: "labw14/group6/run_gel_gene_assembly.pl"
  group: aquarium_user
  argument
    assemblies: [assembly1_product, assembly2_product]
  end
  start: now()
  window: minutes(30)
end

place cut_gel
  protocol: "labw14/group6/cut_gel.pl"
  group: aquarium_user
  argument
    fragment_gel_lanes: fragment_gel_lanes
  end
  start: now()
  window: minutes(30)
end

place gel_purify
  protocol: "labw14/group6/gel_purify.pl"
  group: aquarium_user
  argument
    gel_slices: gel_slices
  end
  start: now()
  window: minutes(30)
end

place gibson
  protocol: "labw14/group6/gibson_assembly.pl"
  group: aquarium_user
  argument
    fragments: purified_fragments + backbone_fragments
  end
  start: now()
  window: minutes(1)
end

#place transformation
  #protocol: "labw14/group6/e_coli_transformation.pl"
  #group: aquarium_user
  #start: now()
  #window: minutes(1)
#end

#place plate
#end

#place overnight
#end

#place miniprep
#end

#place sequencing
#end

#Wires are a place-holder for now, totally nonesense currently

wire (stock1, "primer_pool") => (assembly1, "oligo_pool11")
wire (stock2, "primer_pool") => (assembly1, "oligo_pool12")
wire (stock3, "primer_pool") => (assembly2, "oligo_pool21")
wire (stock4, "primer_pool") => (assembly2, "oligo_pool22")
wire (assembly1, "gene") => (run_gel_image, "assembly1_product")
wire (assembly2, "gene") => (run_gel_image, "assembly2_product")
wire (run_gel_image, "fragment_gel_lanes") => (cut_gel, "fragment_gel_lanes")
wire (cut_gel, "gel_slices") => (gel_purify, "gel_slices")
wire (gel_purify, "purified_fragments") => (gibson, "purified_fragments")


transition [ stock1, stock2 ] => [ assembly1 ] when !error(0) && completed(0) && !error(1) && completed(1) end
transition [ stock1 ] => [ stock1 ] when error(0) end
transition [ stock2 ] => [ stock2 ] when error(0) end

transition [ stock3, stock4 ] => [ assembly2 ] when !error(0) && completed(0) && !error(1) && completed(1) end
transition [ stock3 ] => [ stock3 ] when error(0) end
transition [ stock4 ] => [ stock4 ] when error(0) end

transition [ assembly1, assembly2 ] => [ run_gel_image ] when !error(0) && completed(0) && !error(1) && completed(1) end
transition [ assembly1 ] => [ assembly1 ] when error(0) end
transition [ assembly2 ] => [ assembly2 ] when error(0) end

transition [ run_gel_image ] => [ cut_gel ] when !error(0) && completed(0) end
transition [ run_gel_image ] => [ run_gel_image ] when error(0) end

transition [ cut_gel ] => [ gel_purify ] when !error(0) && completed(0) end
transition [ cut_gel ] => [ cut_gel ] when error(0) end

transition [ gel_purify ] => [ gibson ] when !error(0) && completed(0) end
transition [ gel_purify ] => [ gel_purify ] when error(0) end

transition [ gibson ] => [ transformation ] when !error(0) && completed(0) end
transition [ gibson ] => [ gibson ] when error(0) end

#transition [ transformation ] => [ plate ] when !error(0) && completed(0) end
#transition [ transformation ] => [ transformation ] when error(0) end

#transition [ plate ] => [ overnight ] when !error(0) && completed(0) end
#transition [ plate ] => [ plate ] when error(0) end

#transition [ overnight ] => [ miniprep ] when !error(0) && completed(0) end
#transition [ overnight ] => [ overnight ] when error(0) end

#transition [ miniprep ] => [ sequencing ] when !error(0) && completed(0) end
#transition [ miniprep ] => [ miniprep ] when error(0) end

#transition [ sequencing ] => [] when !error(0) && completed(0) end
#transition [ sequencing ] => [ sequencing ] when error(0) end
