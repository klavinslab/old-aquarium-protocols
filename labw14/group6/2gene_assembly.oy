backbone_fragments = [1141, 1144]

argument
  fragments: sample array, "Choose the fragments you want to combine"
end

place gibson
  protocol: "labw14/group6/full_length_protocols/gibson_assembly.pl"
  group: aquarium_user
  argument
    fragment2: backbone_fragments
  end
  start: now()
  window: minutes(30)
end


place transformation
  protocol: "labw14/group6/full_length_protocols/e_coli_transformation.pl"
  group: aquarium_user
  start: now()
  window: minutes(30)
end

wire (gibson, "Gibson_Reaction_Result_id") => (transformation, "plasmid")

place plate
  protocol: "labw14/group6/full_length_protocols/plate.pl"
  group: aquarium_user
  start: now()
  window: minutes(30)
end

wire (transformation, "transformed_cells_id") => (plate, "e_coli_strain_id")

place overnight
  protocol: "labw14/group6/full_length_protocols/overnight_suspension.pl"
  group: aquarium_user
  start: now()
  window: minutes(30)
end

wire (plate, "plate_id") => (overnight, "colony_plate")

#place miniprep
  #protocol: "labw14/group6/full_length_protocols/miniprep.pl"
  #argument
  
  #end
  #group: aquarium_user
  #start: now()
  #window: minutes(30)
#end

# Wire here


#place sequencing
  #protocol: "labw14/group6/full_length_protocols/sequencing.pl"
  #argument

  #end
  #start: now()
  #window: minutes(30)
#end


transition [ gibson ] => [ transformation ] when !error(0) && completed(0) end
transition [ gibson ] => [ gibson ] when error(0) end


transition [ transformation ] => [ plate ] when !error(0) && completed(0) end
transition [ transformation ] => [ transformation ] when error(0) end

transition [ plate ] => [ overnight ] when !error(0) && completed(0) end
transition [ plate ] => [ plate ] when error(0) end

transition [ overnight ] => [] when !error(0) && completed(0) end
transition [ overnight ] => [ overnight ] when error(0) end

#transition [ miniprep ] => [ sequencing ] when !error(0) && completed(0) end
#transition [ miniprep ] => [ miniprep ] when error(0) end

#transition [ sequencing ] => [] when !error(0) && completed(0) end
#transition [ sequencing ] => [ sequencing ] when error(0) end
