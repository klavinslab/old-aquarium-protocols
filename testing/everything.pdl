<protocol>

  <argument>
    <name>object_name</name>
    <type>string</type>
    <description>The name of object type you would like this protocol to use.</description>
  </argument>

  <information>This protocol tests a few things, and will start by helping you take and release %{object_name}.</information>

  <take>
    <object>%{object_name}</object>
    <quantity>1</quantity>
    <var>b</var>
  </take>

  <assign><lhs>name</lhs><rhs>%{b}[0][:object][:name]</rhs></assign>
  <assign><lhs>loc</lhs> <rhs>%{b}[0][:item][:location]</rhs></assign>

  <step>
    <description>You took an object of type %{name} from location %{loc}.</description>
  </step>

  <release>%{b}</release>

  <step>
    <description>Thank you for returning the %{name}.</description>
    <note>That was very respectful of you.</note>
  </step>

  <step>
    <description>Would you like to produce a bottle?</description>
    <select>
      <var>answer</var>
      <description>Enter yes or no</description>
      <choice>yes</choice>
      <choice>no</choice>
    </select>
  </step>

  <if>

    <condition>%{answer} == 'yes'</condition>

    <then>

      <produce>
        <object>1000 mL Bottle</object>
        <quantity>1</quantity>
      </produce>

      <step>
        <description>Ok! Check the inventory. There should be a new bottle at the location you specified.</description>
      </step>

    </then>

    <else>

      <step>
        <description>Suit yourself. No bottles will be produced.</description>
      </step>

    </else>

  </if>

  <step>
    <description>Now let's print out the first few numbers in the Fibonacci sequence.</description>
  </step>

  <assign><lhs>x</lhs><rhs>0</rhs></assign>
  <assign><lhs>y</lhs><rhs>1</rhs></assign>

  <while>
    <condition>%{y} &lt; 100</condition>
    <do>
      <step><description>In the while loop, y = %{y}.</description></step>
      <if>
        <condition>%{y} &gt; 50</condition>
        <then><step><description>Hey! y is getting pretty big!</description></step></then>
        <else><step><description>y is not such a big number ... yet!</description></step></else>
      </if>
      <assign><lhs>temp</lhs><rhs>%{x}+%{y}</rhs></assign>
      <assign><lhs>x</lhs><rhs>%{y}</rhs></assign>
      <assign><lhs>y</lhs><rhs>%{temp}</rhs></assign>
    </do>
  </while>

  <log><type>REPORT</type><data>{ message: 'We computed the sequence all the way up to %{y}!'}</data></log>

  <step>
    <description>All done. Thank you for running this protocol.</description>
  </step>

</protocol>
